name: branch-deploy

on:
  issue_comment:
    types: [ created ]

env:
  WORKING_DIR: terraform/

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read
  statuses: read

jobs:
  deploy:
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    name: deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request }} # only run on pull request comments

    steps:
      - name: branch-deploy
        id: branch-deploy
        uses: github/branch-deploy@v9

      - name: checkout
        if: steps.branch-deploy.outputs.continue == 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.branch-deploy.outputs.ref }}

      - name: Output Inputs
        run: echo "${{ toJSON(github.event.inputs) }}"
     
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v1.1.1
        with:
          create_credentials_file: 'true'
          workload_identity_provider: 'projects/1036098905197/locations/global/workloadIdentityPools/andrey-dev/providers/andrey-dev'
          service_account: 'tf-dev-sa@sandbox-andrey-dev.iam.gserviceaccount.com'    
      
      - uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # pin@v2.0.3
        if: steps.branch-deploy.outputs.continue == 'true'
        with:
          terraform_version: 1.1.7

      - name: Terraform init
        if: steps.branch-deploy.outputs.continue == 'true'
        run: terraform init

      - name: Terraform plan
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop == 'true' }}
        id: plan
        continue-on-error: true
        run: |
          set -o pipefail
          terraform plan -no-color -compact-warnings | tee terraform-output.txt

      - name: Terraform apply
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' }}
        id: apply
        continue-on-error: true
        run: |
          set -o pipefail
          terraform apply -no-color -auto-approve -compact-warnings | tee terraform-output.txt

      - name: terratrash
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        uses: GrantBirki/terratrash-action@v0.0.2
        with:
          input_file_path: terraform/terraform-output.txt
          erb_render_template: .github/deployment_message.md
          erb_render_save_path: .github/deployment_message.md

      - name: Check Terraform plan output
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop == 'true' && steps.plan.outcome == 'failure' }}
        run: exit 1

      - name: Check Terraform apply output
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' && steps.apply.outcome == 'failure' }}
        run: exit 1
